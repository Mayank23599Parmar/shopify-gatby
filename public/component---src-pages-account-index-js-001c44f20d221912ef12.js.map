{"version":3,"file":"component---src-pages-account-index-js-001c44f20d221912ef12.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/global/Navbar.jsx","webpack://my-gatsby-site/./src/components/global/Footer.jsx","webpack://my-gatsby-site/./src/components/cart/CartDrawerItem.jsx","webpack://my-gatsby-site/./src/components/cart/CartDrwawer.jsx","webpack://my-gatsby-site/./src/components/global/Layout.jsx","webpack://my-gatsby-site/./src/context/accountContext/accountActionTypes.js","webpack://my-gatsby-site/./src/context/accountContext/accountReducer.js","webpack://my-gatsby-site/./src/storeQueries/query/customer/customer.js","webpack://my-gatsby-site/./src/context/accountContext/account-context.jsx","webpack://my-gatsby-site/./src/hooks/useCart.js","webpack://my-gatsby-site/./src/hooks/useCustomer.js","webpack://my-gatsby-site/./src/hooks/useIsCustomerLogin.js","webpack://my-gatsby-site/./src/hooks/useMoney.js","webpack://my-gatsby-site/./src/components/account/AccountDetail.jsx","webpack://my-gatsby-site/./src/pages/account/index.js","webpack://my-gatsby-site/./src/storeQueries/fragment/customer/customer_address.js","webpack://my-gatsby-site/./src/storeQueries/fragment/customer/customer_order.js","webpack://my-gatsby-site/./src/storeQueries/fragment/customer/customer.js","webpack://my-gatsby-site/./src/utils/helper.js"],"sourcesContent":["import { Link} from 'gatsby'\n//import { StaticImage } from 'gatsby-plugin-image';\nimport React, { useEffect } from 'react'\nimport useCart from '../../hooks/useCart'\nimport useIsCustomerLogin from '../../hooks/useIsCustomerLogin';\n\nexport default function Navbar() {\n    const {cart}=useCart();\n   const {isCustomerLogin,logOut}= useIsCustomerLogin()\n    useEffect(()=>{console.log(\"Navbar rendering\",isCustomerLogin)})\n  return (\n    <header className=\"py-4 shadow-sm bg-white\">\n        <div className=\"container flex items-center justify-between\">\n            <Link to='/'>\n            Logo\n            </Link>\n\n            <div className=\"w-full max-w-xl relative flex\">\n                <span className=\"absolute left-4 top-3 text-lg text-gray-400\">\n                    <i className=\"fa-solid fa-magnifying-glass\"></i>\n                </span>\n                <input type=\"text\" name=\"search\" id=\"search\"\n                    className=\"w-full border border-primary border-r-0 pl-12 py-3 pr-3 rounded-l-md focus:outline-none\"\n                    placeholder=\"search\"/>\n                <button\n                    className=\"bg-primary border border-primary text-white px-8 rounded-r-md hover:bg-transparent hover:text-primary transition\">Search</button>\n            </div>\n\n            <div className=\"flex gap-3 items-center space-x-4\">\n\n                <Link to='/cart' className=\"text-center text-gray-700 hover:text-primary transition relative\">\n                    <div className=\"text-2xl\">\n                        <i className=\"fa-solid fa-bag-shopping\"></i>\n                    </div>\n                    <div className=\"text-lg leading-3\">Cart</div>\n                    <div\n                        className=\"absolute -right-4 -top-4 w-5 h-5 rounded-full flex items-center justify-center bg-primary text-white text-xs\">\n                       {cart.totalQuantity}</div>\n                </Link>\n                <Link to={isCustomerLogin?\"/account\":\"/account/login\"} className=\"text-center text-gray-700 hover:text-primary transition relative\">\n                    <div className=\"text-2xl\">\n                        <i className=\"fa-regular fa-user\"></i>\n                    </div>\n                    <div className=\"text-lg leading-3\">Account</div>\n                </Link>\n            </div>\n        </div>\n    </header>\n  )\n}\n ","import { Link } from 'gatsby'\nimport React from 'react'\n\nexport default function Footer() {\n  return (\n<footer className=\"bg-white rounded-lg shadow m-4 dark:bg-gray-800\">\n    <div className=\"w-full mx-auto max-w-screen-xl p-4 md:flex md:items-center md:justify-between\">\n      <span className=\"text-sm text-gray-500 sm:text-center dark:text-gray-400\">© 2023 <Link to=\"/\" className=\"hover:underline\">Flowbite™</Link>. All Rights Reserved.\n    </span>\n    <ul className=\"flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0\">\n        <li>\n            <Link to=\"/\" activeClassName=\"active\" className=\"mr-4 hover:underline md:mr-6 \">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/products\" activeClassName=\"active\" className=\"mr-4 hover:underline md:mr-6\">Product</Link>\n        </li>\n        <li>\n            <Link to=\"/about\" activeClassName=\"active\" className=\"mr-4 hover:underline md:mr-6\">About</Link>\n        </li>\n    </ul>\n    </div>\n</footer>\n\n  )\n}\n","import React, { memo, useEffect } from 'react'\nimport useCart from '../../hooks/useCart';\nimport useMoney from '../../hooks/useMoney';\n\n function CartDrawerItem({cartItem}) {\n  useEffect(()=>{console.log(\"CartDrawerItem rendering\")})\n    const cartItemPrice = {\n        price: cartItem.merchandise.price.amount,\n        currencyCode: \"USD\",\n        withZero:true\n      };\n      console.log(cartItem,'cartItem')\n     const price=  useMoney(cartItemPrice)\n    const {updateCartLineItem,removeCartLineItem}=useCart();\n    console.log(price,'pricepriceprice')\n  return (   \n    <li className=\"flex py-6\" key={cartItem.id}>\n                                    <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\n                                      <img src ={cartItem.merchandise.image.url} alt={cartItem.merchandise.title} className=\"h-full w-full object-cover object-center\"/>\n                                    </div>\n              \n                                    <div className=\"ml-4 flex flex-1 flex-col\">\n                                      <div>\n                                        <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                                          <h3>\n                                            <a href=\"#\">{cartItem.merchandise.product.title}</a>\n                                          </h3>\n                                          <p className=\"ml-4\">{price?.price}</p>\n                                        </div>\n                                        <p className=\"mt-1 text-sm text-gray-500\">{cartItem.merchandise.title}</p>\n                                      </div>\n                                      <div className=\"flex flex-1 items-end justify-between text-sm\">\n                                      <div className=\"mx-auto flex border border-gray-300 text-gray-600 divide-x divide-gray-300 w-max\">\n          <div className=\"h-8 w-8 text-xl flex items-center justify-center cursor-pointer select-none\" onClick={()=>updateCartLineItem({lineId:cartItem.id, quantity:cartItem.quantity-1})}>\n            -\n          </div>\n          <div className=\"h-8 w-8 text-base flex items-center justify-center\">\n            {cartItem.quantity}\n          </div>\n          <div className=\"h-8 w-8 text-xl flex items-center justify-center cursor-pointer select-none\" onClick={()=>updateCartLineItem({lineId:cartItem.id, quantity:cartItem.quantity+1})}>\n            +\n          </div>\n        </div>\n              \n                                        <div className=\"flex\">\n                                          <button type=\"button\" className=\"font-medium text-indigo-600 hover:text-indigo-500\"onClick={()=>removeCartLineItem({lineId:cartItem.id})}>Remove</button>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </li>\n  )\n}\nexport default CartDrawerItem","import React, { memo, useEffect } from 'react'\nimport useCart from '../../hooks/useCart'\nimport CartDrawerItem from './CartDrawerItem';\n//import useMoney from '../../hooks/useMoney';\nimport { Link } from 'gatsby';\n\nfunction CartDrwawer() {\n    const {cart,toggleCartDrawer,isCartDrawerOpen}=useCart();\n    useEffect(()=>{console.log(\"CartDrwawer rendering\")})\n  // const subtotalAmount= useMoney({price:cart?.cost?.subtotalAmount?.amount,currencyCode:cart?.cost?.subtotalAmount?.currencyCode})\n    const cartItems = cart?.lines?.nodes || [];\nconsole.log(cart,toggleCartDrawer,isCartDrawerOpen,'cart?.cost?.subtotalAmount')\n  return (\n    <>\n    {\n      isCartDrawerOpen &&  <div className=\"relative z-10\" aria-labelledby=\"slide-over-title\" role=\"dialog\" aria-modal=\"true\">\n        {/* <!--\n          Background backdrop, show/hide based on slide-over state.\n      \n          Entering: \"ease-in-out duration-500\"\n            From: \"opacity-0\"\n            To: \"opacity-100\"\n          Leaving: \"ease-in-out duration-500\"\n            From: \"opacity-100\"\n            To: \"opacity-0\"\n        --> */}\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n      \n        <div className=\"fixed inset-0 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\n              {/* <!--\n                Slide-over panel, show/hide based on slide-over state.\n      \n                Entering: \"transform transition ease-in-out duration-500 sm:duration-700\"\n                  From: \"translate-x-full\"\n                  To: \"translate-x-0\"\n                Leaving: \"transform transition ease-in-out duration-500 sm:duration-700\"\n                  From: \"translate-x-0\"\n                  To: \"translate-x-full\"\n              --> */}\n              <div className=\"pointer-events-auto w-screen max-w-md\">\n                <div className=\"flex h-full flex-col overflow-y-scroll bg-white shadow-xl\">\n                  <div className=\"flex-1 overflow-y-auto px-4 py-6 sm:px-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <h2 className=\"text-lg font-medium text-gray-900\" id=\"slide-over-title\">Shopping cart</h2>\n                      <div className=\"ml-3 flex h-7 items-center\">\n                        <button type=\"button\" onClick={()=>toggleCartDrawer(false)} className=\"-m-2 p-2 text-gray-400 hover:text-gray-500\">\n                          <span className=\"sr-only\">Close panel</span>\n                          <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" ariaHidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n      \n                    <div className=\"mt-8\">\n                      <div className=\"flow-root\">\n                        <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\n                            {\n                                 cartItems.map((cartItem) => {\n                                    return <CartDrawerItem cartItem={cartItem}/>\n                                  })\n                            }\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n      \n                  <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n                    <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                      <p>Subtotal</p>\n                      {/* <p>{subtotalAmount?.price}</p> */}\n                    </div>\n                    <p className=\"mt-0.5 text-sm text-gray-500\">Shipping and taxes calculated at checkout.</p>\n                    <div className=\"mt-6\">\n                      <button onClick={()=>window.location.href=cart.checkoutUrl} className=\" w-full flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700\">Checkout</button>\n                    </div>\n                    <div className=\"mt-6 flex justify-center text-center text-sm text-gray-500\">\n                      <p>\n                        or\n                        <Link to='/' type=\"button\" className=\"  font-medium text-indigo-600 hover:text-indigo-500\">\n                          Continue Shopping\n                          <span aria-hidden=\"true\"> &rarr;</span>\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    }\n    </>\n    \n  \n  )\n}\nexport default memo(CartDrwawer)","import React, { memo } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport CartDrwawer from \"../cart/CartDrwawer\";\n function Layout({children,pageName=\"index\"}) {\n  return (\n    <div className={`template-${pageName}`}>\n      <Navbar />\n      <main id=\"mainContent\">\n        {children}\n      </main>\n      <CartDrwawer/>\n      <Footer />\n    </div>\n  );\n}\nexport default memo(Layout)","export const accountActionsTypes={\n    FETCH_CUSTOMER_DATA:\"FETCH_CUSTOMER_DATA\",\n    CUSTOMER_LOADER:\"CUSTOMER_LOADER\"\n}","import { accountActionsTypes } from \"./accountActionTypes\";\n\nconst accountReducer = (state, action) => {\n  switch (action.type) {\n    case accountActionsTypes.FETCH_CUSTOMER_DATA:\n      return {\n        ...state,\n        customer: action.payload\n      }\n      case accountActionsTypes.CUSTOMER_LOADER:\n        return {\n          ...state,\n          customerLoader: action.payload\n        }\n    default:\n      return state\n  }\n}\nexport default accountReducer;","import { gql } from \"@apollo/client\";\nimport { CUSTOMER_DATA } from '../../fragment/customer/customer'\nexport const SET_CUSTOMER_DATA=gql`\n${CUSTOMER_DATA}\nquery Customer($customerAccessToken: String!) {\n    customer(customerAccessToken: $customerAccessToken) {\n      ...CustomerData\n    }\n  }\n\n`","import React, { useReducer, createContext, useEffect } from \"react\";\nimport accountReducer from \"./accountReducer\";\nimport { accountActionsTypes } from \"./accountActionTypes\";\nimport clientApollo from \"../../utils/clientApollo\";\nimport { SET_CUSTOMER_DATA } from \"../../storeQueries/query/customer/customer\";\nimport { getCookies } from \"../../utils/helper\";\nimport { navigate } from \"gatsby\";\nconst defaultValues={\n    customer:null,\n    customerLoader:false\n}\nexport const AccountContext=createContext();\nconst isBrowser = typeof window !== `undefined`;\nconst cookieKey = `shopify_cat`;\nexport const AccountProvider=({ children })=>{\n    const [state, dispatch] = useReducer(accountReducer, defaultValues);\n    const setCustomerData=(customerData)=>{\n        dispatch({\n            type:accountActionsTypes.FETCH_CUSTOMER_DATA,\n            payload:customerData\n        })\n    }\n    const fetchCustomerData=async()=>{\n        dispatch({\n            type:accountActionsTypes.CUSTOMER_LOADER,\n            payload:true\n        })\n        if(!getCookies(cookieKey)){\n            navigate(\"/account/login\")\n            return\n        }\n        \n       const customerData= await clientApollo.query({\n            query:SET_CUSTOMER_DATA,\n            variables:{\n                customerAccessToken:isBrowser && getCookies(cookieKey)?getCookies(cookieKey) : null\n            }\n        })\n        console.log(customerData,'customerData')\n        if(customerData?.data?.customer){\n            setCustomerData(customerData?.data?.customer)\n        }\n        dispatch({\n            type:accountActionsTypes.CUSTOMER_LOADER,\n            payload:false\n        })\n    }\n    useEffect(()=>{\n        fetchCustomerData()\n    },[])\n    return <AccountContext.Provider value={state}>{children}</AccountContext.Provider>\n}","import  { useContext, useMemo } from \"react\"\nimport { StoreContext } from \"../context/storeContext/store-context\"\n\nconst useCart = () => {\n    const {loading,addProductVariantToCart,removeLineItem, updateLineItem,cart,toggleCartDrawer,isCartDrawerOpen} = useContext(StoreContext);\n    if (cart === undefined) {\n      throw new Error(\"useCart must be used within StoreContext\")\n    }\n    const addVariantToCart=({variantId, quantity},callBack=undefined)=>{\n        const variantData={\n            variantId, quantity\n        }\n        addProductVariantToCart(variantData,callBack)\n    }\n    const updateCartLineItem=({lineId, quantity})=>{\n        const lineItemToUpdate={\n            lineId, quantity,\n            cartId:cart.id\n        }\n        updateLineItem(lineItemToUpdate)\n    }\n    const removeCartLineItem=({lineId})=>{\n        const lineItemToUpdate={\n            lineId,\n            cartId:cart.id\n        }\n        removeLineItem(lineItemToUpdate)\n    }\n    const cartValue=useMemo(()=>{\n       return {\n        loading,addVariantToCart,removeCartLineItem, updateCartLineItem,cart,toggleCartDrawer,isCartDrawerOpen\n       }\n    },[loading,addVariantToCart,removeCartLineItem, updateCartLineItem,cart,toggleCartDrawer,isCartDrawerOpen])\n    return cartValue\n  }\n  export default useCart","\nimport  { useContext, useMemo } from \"react\"\nimport {AccountContext} from '../context/accountContext/account-context'\n\nconst useCustomer = () => {\n   const {customer,customerLoader}= useContext(AccountContext);\n    return {customerLoader,customer}\n  }\n  export default useCustomer","import { useCallback, useEffect, useState } from \"react\";\nimport { getCookies, setCookies } from \"../utils/helper\";\nimport { navigate } from \"gatsby\";\n\nexport default function useIsCustomerLogin() {\n  const [isCustomerLogin, setIsCustomerLogin] = useState(false);\n  const customerAccessToken = getCookies(\"shopify_cat\");\n  useEffect(() => {\n    if (customerAccessToken) {\n      setIsCustomerLogin(true);\n    }\n  }, []);\n  const logOut = useCallback(() => {\n    setCookies(\"shopify_cat\", \"\", 0);\n    setIsCustomerLogin(false);\n    navigate(\"/account/login\")\n  },[])\n\n  return { isCustomerLogin, logOut };\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useMoney({price,compareAtPrice,currencyCode=\"USD\",withZero=false}){\n  const [moneyFormat,setMoneyFormat]= useState(null);\n  useEffect(()=>{\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: currencyCode,\n        minimumFractionDigits: withZero?2:0\n        // These options are needed to round to whole numbers if that's what you want.\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n      });\n\n      setMoneyFormat({\n        price:formatter.format(price),\n        compareAtPrice:compareAtPrice?formatter.format(compareAtPrice):compareAtPrice\n      })\n      \n  },[currencyCode,price,compareAtPrice,withZero])\n  console.log(moneyFormat,'moneyFormatmoneyFormat')\n  return moneyFormat\n}","import React from 'react'\nimport useCustomer from '../../hooks/useCustomer'\nimport useIsCustomerLogin from '../../hooks/useIsCustomerLogin'\n\nexport default function AccountDetail() {\nconst {customer,customerLoader} =useCustomer()\nconst {logOut}= useIsCustomerLogin()\nconsole.log(useCustomer(),'useCustomer()')\n  return (\n    <div className='account-detail'>\n       {\n        customerLoader ?<h1>Loading...</h1>:<div className='container'>\n            <h1>Wellcome {customer?.firstName} {customer?.lastName}</h1>\n            <h1>Email {customer?.email}</h1>\n            <h1>mobile {customer?.phone}</h1>\n            <button onClick={()=>logOut()}>logout</button>\n            </div>\n       }\n        \n    </div>\n  )\n}\n","import React from 'react'\nimport Layout from '../../components/global/Layout'\nimport { AccountProvider } from '../../context/accountContext/account-context'\nimport AccountDetail from '../../components/account/AccountDetail'\n\nexport default function AccountPage() {\n  return (    <Layout>\n      <AccountProvider>\n      <div><AccountDetail/></div>\n      </AccountProvider>\n   \n    </Layout>\n \n  )\n}\n","import { gql } from \"@apollo/client\";\n\nexport const CUSTOMER_ADDRESS=gql`\nfragment CustomerAddress on MailingAddress{\n    address1\n    address2\n    city\n    company\n    country\n    countryCodeV2\n    firstName\n    formatted\n    formattedArea\n    id\n    lastName\n    name\n    phone\n    province\n    provinceCode\n    zip\n}\n`","import { gql } from \"@apollo/client\";\nimport { CUSTOMER_ADDRESS } from \"./customer_address\";\n\nexport const CUSTOMER_ORDER=gql`\n${CUSTOMER_ADDRESS}\nfragment CustomerOrder on Order{\n        billingAddress {\n          ...CustomerAddress\n        }\n        canceledAt\n        currencyCode\n        currentSubtotalPrice {\n          amount\n          currencyCode\n        }\n        currentTotalPrice {\n          amount\n          currencyCode\n        }\n        currentTotalTax {\n          amount\n          currencyCode\n        }\n        customAttributes {\n          key\n          value\n        }\n        customerUrl\n        email\n        financialStatus\n        fulfillmentStatus\n        id\n        name\n        orderNumber\n        originalTotalPrice {\n          amount\n          currencyCode\n        }\n        phone\n        processedAt\n        shippingAddress {\n            ...CustomerAddress\n        }\n        statusUrl\n        subtotalPrice {\n          amount\n          currencyCode\n        }\n        totalPrice {\n          amount\n          currencyCode\n        }\n}\n`","import { gql } from \"@apollo/client\";\nimport { CUSTOMER_ORDER } from \"./customer_order\";\nimport { CUSTOMER_ADDRESS } from \"./customer_address\";\n\nexport const CUSTOMER_DATA=gql`\n${CUSTOMER_ORDER}\n${CUSTOMER_ADDRESS}\nfragment CustomerData on Customer{\n    acceptsMarketing\n    createdAt\n    displayName\n    email\n    firstName\n    id\n    lastName\n    phone\n    tags\n    updatedAt\n    addresses(first: 15) {\n        nodes {\n       ...CustomerAddress\n        }\n    }\n    defaultAddress {\n        ...CustomerAddress  \n    }\n    orders(first: 100) {\n        nodes {\n            ...CustomerOrder\n        }\n    }\n}\n`","const setCookies=(cname,cvalue,exdays=1)=>{\n    const d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    let expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nconst getCookies=(cname)=>{\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for(let i = 0; i <ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n}\nconst dayDiffInFromTodayDate=(date)=>{\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const firstDate = new Date();\n    const secondDate = new Date(date)\n    const diffDays = Math.round(Math.abs((firstDate - secondDate) / oneDay));\n    return diffDays\n}\nexport{\n    setCookies,\n    getCookies,\n    dayDiffInFromTodayDate\n}"],"names":["Navbar","cart","useCart","isCustomerLogin","logOut","useIsCustomerLogin","useEffect","console","log","className","to","type","name","id","placeholder","totalQuantity","Footer","activeClassName","cartItem","cartItemPrice","price","merchandise","amount","currencyCode","withZero","useMoney","updateCartLineItem","removeCartLineItem","key","src","image","url","alt","title","href","product","onClick","lineId","quantity","CartDrwawer","toggleCartDrawer","isCartDrawerOpen","cartItems","lines","nodes","role","fill","viewBox","strokeWidth","stroke","ariaHidden","strokeLinecap","strokeLinejoin","d","map","window","location","checkoutUrl","memo","Layout","children","pageName","accountActionsTypes","state","action","customer","payload","customerLoader","SET_CUSTOMER_DATA","gql","CUSTOMER_DATA","defaultValues","AccountContext","createContext","isBrowser","cookieKey","AccountProvider","dispatch","useReducer","accountReducer","fetchCustomerData","async","getCookies","navigate","customerData","clientApollo","query","variables","customerAccessToken","data","setCustomerData","Provider","value","loading","addProductVariantToCart","removeLineItem","updateLineItem","useContext","StoreContext","undefined","Error","addVariantToCart","callBack","variantId","lineItemToUpdate","cartId","useMemo","setIsCustomerLogin","useState","useCallback","setCookies","compareAtPrice","moneyFormat","setMoneyFormat","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format","AccountDetail","useCustomer","firstName","lastName","email","phone","AccountPage","CUSTOMER_ADDRESS","CUSTOMER_ORDER","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","dayDiffInFromTodayDate","date","firstDate","secondDate","Math","round","abs"],"sourceRoot":""}